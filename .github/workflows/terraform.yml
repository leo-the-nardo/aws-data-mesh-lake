name: Terraform CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'infra-eks/**'
      - 'infra-glue/**'
      - 'infra-network/**'
      - 'infra-state-resources/**'

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'us-east-1'

jobs:
  # Detect which directories have changes
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      infra-eks: ${{ steps.filter.outputs.infra-eks }}
      infra-glue: ${{ steps.filter.outputs.infra-glue }}
      infra-network: ${{ steps.filter.outputs.infra-network }}
      infra-state-resources: ${{ steps.filter.outputs.infra-state-resources }}
      any-changes: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for directory changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            infra-eks:
              - 'infra-eks/**'
            infra-glue:
              - 'infra-glue/**'
            infra-network:
              - 'infra-network/**'
            infra-state-resources:
              - 'infra-state-resources/**'

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: detect-changes
    strategy:
      matrix:
        infra-dir: [infra-eks, infra-glue, infra-network, infra-state-resources]
    # Only run if this specific directory has changes
    if: needs.detect-changes.outputs[matrix.infra-dir] == 'true'
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to AWS using OIDC
        id: aws-auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ./${{ matrix.infra-dir }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./${{ matrix.infra-dir }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./${{ matrix.infra-dir }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -var-file="variables/dev.tfvars" -out=tfplan
          terraform show -no-color tfplan > tfplan.txt
        working-directory: ./${{ matrix.infra-dir }}

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ matrix.infra-dir }}
          path: ./${{ matrix.infra-dir }}/tfplan
          retention-days: 5

  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: [detect-changes, terraform-plan]
    if: needs.detect-changes.outputs.any-changes == 'true'
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build changed directories list
        id: changed-list
        run: |
          changed=""
          [ "${{ needs.detect-changes.outputs.infra-eks }}" == "true" ] && changed="$changed infra-eks"
          [ "${{ needs.detect-changes.outputs.infra-glue }}" == "true" ] && changed="$changed infra-glue"
          [ "${{ needs.detect-changes.outputs.infra-network }}" == "true" ] && changed="$changed infra-network"
          [ "${{ needs.detect-changes.outputs.infra-state-resources }}" == "true" ] && changed="$changed infra-state-resources"
          echo "directories=$changed" >> $GITHUB_OUTPUT
          
      - name: Await for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: leo-the-nardo
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          issue-body: |
            Please review and approve the Terraform deployment.
            
            **Commit:** ${{ github.sha }}
            **Actor:** ${{ github.actor }}
            **Branch:** ${{ github.ref_name }}
            
            **Changed Infrastructure Directories:** ${{ steps.changed-list.outputs.directories }}
            
            The Terraform plan has been generated and is ready for deployment.
          exclude-workflow-initiator-as-approver: false

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [detect-changes, manual-approval]
    strategy:
      matrix:
        infra-dir: [infra-eks, infra-glue, infra-network, infra-state-resources]
    # Only run if this specific directory has changes
    if: needs.detect-changes.outputs[matrix.infra-dir] == 'true'
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Authenticate to AWS using OIDC
        id: aws-auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-${{ matrix.infra-dir }}
          path: ./${{ matrix.infra-dir }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./${{ matrix.infra-dir }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./${{ matrix.infra-dir }}

      - name: Output Terraform Results
        run: |
          echo "## Terraform Apply Results - ${{ matrix.infra-dir }}" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Terraform apply completed successfully for ${{ matrix.infra-dir }}!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Actor:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Directory:** ${{ matrix.infra-dir }}" >> $GITHUB_STEP_SUMMARY

