name: Reusable Terraform Workflow

# This is a reusable workflow that can be called by other workflows
# It implements the cost-effective approval pattern

on:
  workflow_call:
    inputs:
      terraform_directory:
        description: 'Terraform directory to deploy'
        required: true
        type: string
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string
      terraform_version:
        description: 'Terraform version'
        required: false
        type: string
        default: '1.5.0'
    secrets:
      aws_role_arn:
        required: true
      aws_region:
        required: false

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    name: Terraform Plan (${{ inputs.terraform_directory }})
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.plan.outputs.has-changes }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_role_arn }}
          aws-region: ${{ secrets.aws_region || 'us-east-1' }}
          role-session-name: gh-actions-${{ inputs.environment }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.terraform_directory }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ inputs.terraform_directory }}

      - name: Terraform Plan
        id: plan
        run: |
          set +e
          terraform plan \
            -var-file="variables/${{ inputs.environment }}.tfvars" \
            -out=tfplan \
            -detailed-exitcode
          EXIT_CODE=$?
          set -e
          
          # Exit codes: 0=no changes, 1=error, 2=changes
          if [ $EXIT_CODE -eq 2 ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi
          
          if [ $EXIT_CODE -eq 1 ]; then
            exit 1
          fi
        working-directory: ${{ inputs.terraform_directory }}


  # This job only runs if there are changes and environment protection is configured
  approval-gate:
    name: Approval Required
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: needs.terraform-plan.outputs.has-changes == 'true'
    environment:
      name: ${{ inputs.environment }}
    
    steps:
      - name: Approval Received
        run: |
          echo "✅ Deployment approved for ${{ inputs.environment }}"
          echo "📁 Directory: ${{ inputs.terraform_directory }}"
          echo "👤 Approved by: ${{ github.actor }}"

  terraform-apply:
    name: Terraform Apply (${{ inputs.terraform_directory }})
    runs-on: ubuntu-latest
    needs: [terraform-plan, approval-gate]
    if: needs.terraform-plan.outputs.has-changes == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_role_arn }}
          aws-region: ${{ secrets.aws_region || 'us-east-1' }}
          role-session-name: gh-actions-${{ inputs.environment }}

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ inputs.environment }}-${{ inputs.terraform_directory }}
          path: ${{ inputs.terraform_directory }}/

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.terraform_directory }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ inputs.terraform_directory }}

      - name: Summary
        run: |
          echo "### ✅ Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Directory**: ${{ inputs.terraform_directory }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

